##############################################################################
# cmake configuration file for CED
#
# requires:
#   MacroCheckPackageLibs.cmake for checking package libraries
#
# returns following variables:
#
#   CED_FOUND      : set to TRUE if CED found
#       if FIND_PACKAGE called with REQUIRED and COMPONENTS arguments
#       CED_FOUND is only set to TRUE if ALL components are also found
#       if REQUIRED is NOT set components may or may not be available
#
#   CED_ROOT       : path to this CED installation
#   CED_LIBRARIES  : list of CED libraries (NOT including COMPONENTS)
#   CED_INCLUDE_DIRS  : list of paths to be used with INCLUDE_DIRECTORIES
#   CED_LIBRARY_DIRS  : list of paths to be used with LINK_DIRECTORIES
#   CED_COMPONENT_LIBRARIES      : list of CED component libraries
#   CED_${COMPONENT}_FOUND       : set to TRUE or FALSE for each library
#   CED_${COMPONENT}_LIBRARY     : path to individual libraries
#   CED_${COMPONENT}_LIB_DEPENDS : individual library dependencies
#
# @author Jan Engels, Desy
##############################################################################

SET( CED_ROOT "@CMAKE_INSTALL_PREFIX@" )


# ---------- include dirs -----------------------------------------------------
# do not store find results in cache
SET( CED_INCLUDE_DIRS CED_INCLUDE_DIRS-NOTFOUND )
MARK_AS_ADVANCED( CED_INCLUDE_DIRS )

FIND_PATH( CED_INCLUDE_DIRS
	NAMES ced_cli.h 
	PATHS ${CED_ROOT}/include
	NO_DEFAULT_PATH
)



# ---------- libraries --------------------------------------------------------
# do not store find results in cache
SET( CED_LIBRARY_DIRS ${CED_ROOT}/lib )
SET( CED_LIBRARIES CED_LIBRARIES-NOTFOUND )
MARK_AS_ADVANCED( CED_LIBRARY_DIRS CED_LIBRARIES )

FIND_LIBRARY( CED_LIBRARIES
    NAMES CED
    PATHS ${CED_LIBRARY_DIRS}
    NO_DEFAULT_PATH
)



# ---------- libraries dependencies -------------------------------------------
# this sets CED_${COMPONENT}_LIB_DEPENDS variables
INCLUDE( "${CED_ROOT}/lib/cmake/CEDLibDeps.cmake" )
 



# ---------- final checking ---------------------------------------------------
INCLUDE( FindPackageHandleStandardArgs )
# set CED_FOUND to TRUE if all listed variables are TRUE and not empty
# CED_COMPONENT_VARIABLES will be set if FIND_PACKAGE is called with REQUIRED argument
FIND_PACKAGE_HANDLE_STANDARD_ARGS( CED DEFAULT_MSG CED_ROOT CED_INCLUDE_DIRS CED_LIBRARIES )

